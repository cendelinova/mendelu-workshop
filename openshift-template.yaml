# Template to produce a new test environment in OpenShift.
#
# To create an environment from the template, process and apply it:
#   oc process -f openshift-template.yaml | oc apply -f -

---
apiVersion: v1
kind: Template
metadata:
  name: mendelu-workshop
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "countdown"
    labels:
      app: workshop
  spec:
    replicas: 1
    strategy:
      activeDeadlineSeconds: 3600
      recreateParams:
        timeoutSeconds: 600
      type: Recreate
    template:
      metadata:
        labels:
          app: workshop
      spec:
        volumes:                          
          - name: dshm
            emptyDir:
              medium: Memory
        containers:
        - name: frontend
          image: "quay.io/cendelinova/mendelu-workshop:latest"
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
          resources:
            limits:
              memory: 128Mi
              cpu: 50m
            requests:
              memory: 128Mi
              cpu: 50m
          command:
            - "python3"
            - "-m"
            - "http.server"
            - "--cgi"
            - "8080"
        - name: backend
          image: "quay.io/cendelinova/mendelu-workshop:latest"
          imagePullPolicy: Always
          resources:
            limits:
              memory: 128Mi
              cpu: 50m
            requests:
              memory: 128Mi
              cpu: 50m
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
          command:
            - "python3"
            - "backend.py"
- apiVersion: v1
  kind: Service
  metadata:
    name: web
    labels:
      app: workshop
      service: web
  spec:
    ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: workshop
- apiVersion: v1
  kind: Route
  metadata:
    name: web
    labels:
      app: workshop
      service: web
  spec:
    port:
      targetPort: web
    to:
      kind: Service
      name: web
